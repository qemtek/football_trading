version: 2
jobs:
  test_model:
    working_directory: ~/project
    docker:
      - image: circleci/python:3.7.2
    steps:
      - checkout
      - run:
          name: Running Tests
          command: |
            virtualenv venv
            . venv/bin/activate
            pip install --upgrade pip
            pip install -r packages/football_trading/requirements.txt
            export PROJECTSPATH=$CCI_PROJECTSPATH
            export IN_PRODUCTION=false
            export DB_DIR=$CCI_DB_DIR
            export BFEX_USER=$CCI_BFEX_USER
            export BFEX_PASSWORD=$CCI_BFEX_PASS
            export BFEX_APP_KEY=$CCI_BFEX_APP_KEY
            export BFEX_CERTS_PATH=$CCI_BFEX_CERTS_PATH
            export PRODUCTION_MODEL_NAME=match-predict-base
            export RECREATE_DB=false
            # Should we download any data here?
            py.test -vv packages/football_trading/tests
  train_and_upload_model:
    working_directory: ~/project
    docker:
      - image: circleci/python:3.7.2
    steps:
      - checkout
      - run:
          name: Setup end
          command: |
            virtualenv venv
            . venv/bin/activate
            pip install --upgrade pip
            pip install -r packages/football_trading/requirements.txt
            export PROJECTSPATH=$CCI_PROJECTSPATH
            export IN_PRODUCTION=false
            export DB_DIR=$CCI_DB_DIR
            export BFEX_USER=$CCI_BFEX_USER
            export BFEX_PASSWORD=$CCI_BFEX_PASS
            export BFEX_APP_KEY=$CCI_BFEX_APP_KEY
            export BFEX_CERTS_PATH=$CCI_BFEX_CERTS_PATH
            export PRODUCTION_MODEL_NAME=match-predict-base
            export RECREATE_DB=false
      - run:
          name: Publish model
          command: |
            . venv/bin/activate
            chmod +x ./scripts/publish_model.sh
            PYTHONPATH=./packages/football_trading python3 packages/football_trading/football_trading/train.py
            ./scripts/publish_model.sh ./packages/football_trading/
workflows:
  version: 2
  test-all:
    jobs:
      - test_model
      - train_and_upload_model
